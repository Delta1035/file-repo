apiVersion: v1
kind: Service
metadata:
  namespace: {{ .Values.namespace }}
  annotations:
    service.beta.kubernetes.io/azure-load-balancer-resource-group: {{ .Values.resourceGroup }}
    service.beta.kubernetes.io/azure-dns-label-name: {{ template "webportal.label" . }}
    service.beta.kubernetes.io/azure-load-balancer-internal: "true"
  name: {{ template "webportal.label" . }}
  labels:
    app: {{ template "webportal.label" . }}
    service: {{ template "webportal.label" . }}
spec:
  #{{- if .Values.spec.loadBalancerIP }}
  #loadBalancerIP: {{ .Values.spec.loadBalancerIP }}
  #{{- end }}
  type: LoadBalancer
  #type: ClusterIP
  loadBalancerSourceRanges:
  - 10.0.0.0/8
  ports:
  - name: web
    protocol: TCP
    port: 80
    targetPort: 80
  selector:
    app: {{ template "webportal.label" . }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "webportal.label" . }}
  namespace: {{ .Values.namespace }}
spec:
  selector:
   matchLabels:
     app: {{ template "webportal.label" . }}
  replicas: 1
  template:
    metadata:
      namespace: {{ .Values.namespace }}
      labels:
        app: {{ template "webportal.label" . }}
        version: v1
        opal-opa-istio-injection: "disable"
        # opa-istio-injection: "enabled"
    spec:
      imagePullSecrets:
      - name: "{{ .Values.imagePullSecret }}"
      containers:
      - name: {{ template "webportal.label" . }}
        image: "{{ .Values.imageName }}"
        imagePullPolicy: Always
        env:
        - name: SITE
          value: {{ .Values.site }}
        - name: INSIGHTS_CONNECTION
          value: {{ .Values.parameters.insights_connection }}
        resources:
          limits:
            cpu: "{{ .Values.resources.limits.cpu }}"
            memory: "{{ .Values.resources.limits.memory }}"
          requests:
            cpu: "{{ .Values.resources.requests.cpu }}"
            memory: "{{ .Values.resources.requests.memory }}"
        ports:
        - name: web
          containerPort: 80
          protocol: TCP
