cache:
  untracked: true
  paths:
    - .m2/

variables:
  isTicketFinish: ""

stages:
  - setup
  - build-test
  - deploy-test
  - zap-scan
  - release-test-deploy
  - sonar-scan
  - build
  - build-image
  - itsm
  - itsm-result
  - get-itsm-status
  - update
  - itsm-clear

get_gitlab_version:
  rules:
    - if: '$CI_COMMIT_BRANCH == "pre-production-k8s" || $CI_COMMIT_BRANCH == "production-k8s"'
      when: never
    - if: '$CI_MERGE_REQUEST_SOURCE_BRANCH_NAME != "master" && $CI_MERGE_REQUEST_TARGET_BRANCH_NAME == "pre-production"'
      when: always
    - if: '$CI_MERGE_REQUEST_SOURCE_BRANCH_NAME != "pre-production" && $CI_MERGE_REQUEST_TARGET_BRANCH_NAME == "production"'
      when: always
    - if: '$CI_COMMIT_BRANCH != "" && $CI_COMMIT_BRANCH != null && $CI_COMMIT_BRANCH != "reset-itsm"'
      when: always
  image: harbor.wistron.com/base_image/alpine:3.10
  stage: setup
  tags:
    - prd-runner02
  before_script:
    - apk add curl
    - apk add jq
    - . ci-funcs.sh
  script:
    - add_version_tag_on_release
    - get_version
  artifacts:
    paths:
      - build-vars.sh
    when: always
    expire_in: 1 days

maven-compile:
  rules:
    - if: '$CI_COMMIT_BRANCH == "pre-production-k8s" || $CI_COMMIT_BRANCH == "production-k8s"'
      when: never
    - if: '$CI_COMMIT_BRANCH == "pre-production" ||  $CI_COMMIT_BRANCH == "production"'
      when: never
    - if: '$CI_COMMIT_BRANCH != "" && $CI_COMMIT_BRANCH != null && $CI_COMMIT_BRANCH != "reset-itsm"'
      when: always
  image: harbor.wistron.com/base_image/maven:3-jdk-11
  stage: build
  tags:
    - prd-runner02
  variables:
    GIT_SUBMODULE_STRATEGY: recursive

  script:
    - mvn clean $MAVEN_OPTS
    - mvn compile $MAVEN_OPTS

maven-install:
  rules:
    - if: '$CI_COMMIT_BRANCH == "master"'
      when: always
    - if: '$CI_MERGE_REQUEST_SOURCE_BRANCH_NAME != "master" && $CI_MERGE_REQUEST_TARGET_BRANCH_NAME == "pre-production"'
      when: always
    - if: '$CI_MERGE_REQUEST_SOURCE_BRANCH_NAME != "pre-production" && $CI_MERGE_REQUEST_TARGET_BRANCH_NAME == "production"'
      when: always
  image: harbor.wistron.com/base_image/maven:3-jdk-11
  stage: build
  tags:
    - prd-runner02
  variables:
    GIT_SUBMODULE_STRATEGY: recursive
  script:
    - mvn clean $MAVEN_OPTS
    - mvn install $MAVEN_OPTS
    - ls ./target -la
  artifacts:
    paths:
      - target/**/*
      - target/*.jar
    when: always
    expire_in: 1 days

build-test-image:
  rules:
    - if: '$ENABLE_ZAP == "Y" && $CI_COMMIT_BRANCH == "master"'
      when: always
  image: harbor.wistron.com/base_image/vc-tool:latest
  stage: build-test
  tags:
    - prd-runner02
  script:
    - tag=${DOCKER_TEST_IMAGE_TAG}
    - docker build -t ${BUILD_IMAGE_NAME}:${tag} --rm=true .
    - docker tag ${BUILD_IMAGE_NAME}:${tag} ${HARBOR_URL}/${HARBOR_PROJECT}/${BUILD_IMAGE_NAME}:${tag}
    - echo "$HARBOR_PASSWORD" | docker login -u "$HARBOR_USER" --password-stdin ${HARBOR_URL}
    - docker push ${HARBOR_URL}/${HARBOR_PROJECT}/${BUILD_IMAGE_NAME}:${tag}

deploy-test-image:
  rules:
    - if: '$ENABLE_ZAP == "Y" && $CI_COMMIT_BRANCH == "master"'
      when: always
  stage: deploy-test
  image: harbor.wistron.com/base_image/rancher-deploy-tool:latest
  tags:
    - prd-runner02
  script:
    - ls -al
    - deploy -n ${SERVICE_NAME} -i ${HARBOR_URL}/${HARBOR_PROJECT}/${BUILD_IMAGE_NAME}:${DOCKER_TEST_IMAGE_TAG} -pu zaptest -m 8080

zap-scan:
  rules:
    - if: '$ENABLE_ZAP == "Y" && $CI_COMMIT_BRANCH == "master"'
      when: always
  stage: zap-scan
  image: harbor.wistron.com/base_image/zap2docker-stable:latest
  tags:
    - prd-runner02
  script:
    - mkdir -p ./report
    - mkdir -p /zap/wrk
    - zap-baseline.py -I -t http://${SERVICE_NAME}.k8s-dev.k8s.wistron.com/zaptest -x testreport.xml -d
    - ls -altr
    - cp -pr /zap/wrk ./report
    - ls -al ./report/*
  artifacts:
    paths:
      - ./report
    expire_in: 1 day

release-test-deploy:
  rules:
    - if: '$ENABLE_ZAP == "Y" && $CI_COMMIT_BRANCH == "master"'
      when: always
  stage: release-test-deploy
  image: harbor.wistron.com/base_image/rancher-deploy-tool:latest
  tags:
    - prd-runner02
  script:
    - release ${SERVICE_NAME}

sonar-scan:
  rules:
    - if: '$CI_COMMIT_BRANCH == "master"'
      when: always
  image: harbor.wistron.com/base_image/maven:3-jdk-11
  stage: sonar-scan
  variables:
    GIT_SUBMODULE_STRATEGY: recursive
    MAVEN_OPTS: "-Djava.awt.headless=true -Dmaven.repo.local=.m2/repository"
    MAVEN_CLI_OPTS: "-s .m2/settings.xml -B "
  tags:
    - prd-runner02
  cache:
    paths:
      - .m2/repository
  before_script:
    - if test "${SOURCEPJ}" != "true"; then echo "Not Source Code Project, exit ci."; exit 0; fi;
  script:
    - mvn sonar:sonar -Dsonar.projectKey=${SONAR_PROJECT_KEY} -Dsonar.host.url=${SONAR_URL} -Dsonar.login=${SONAR_TOKEN} -Dsonar.java.binaries=${SONAR_SOURCE}/target/classes

docker-build:
  rules:
    - if: '$CI_COMMIT_BRANCH == "master"'
      when: always
    - if: '$CI_MERGE_REQUEST_SOURCE_BRANCH_NAME != "master" && $CI_MERGE_REQUEST_TARGET_BRANCH_NAME == "pre-production"'
      when: always
    - if: '$CI_MERGE_REQUEST_SOURCE_BRANCH_NAME != "pre-production" && $CI_MERGE_REQUEST_TARGET_BRANCH_NAME == "production"'
      when: always
  image: harbor.wistron.com/base_image/vc-tool:latest
  stage: build-image
  variables:
    GIT_SUBMODULE_STRATEGY: recursive
  tags:
    - prd-runner02
  before_script:
    - source build-vars.sh
    - echo ${SYS_VER}
    - . ci-funcs.sh
  script:
    - docker_build

reset-itsm:
  rules:
    - if: '$CI_COMMIT_BRANCH == "reset-itsm"'
      when: always
  stage: setup
  image: harbor.wistron.com/base_image/gitlabapi:alpine
  tags:
    - prd-runner02
  before_script:
    - apk add curl
    - apk add jq
    - . ci-funcs.sh
    - source build-vars.sh
    - echo ${SYS_VER}
  script:
    - clear_itsm_status

itsm-qas:
  rules:
    - if: '$ENABLE_ITSM != "Y" || $ITSM_ENV == "PRD"'
      when: never
    - if: '$CI_COMMIT_BRANCH == "production" && $CI_PIPELINE_SOURCE != "schedule" && $CI_PIPELINE_SOURCE != "trigger"'
      when: always
  stage: itsm
  image: harbor.wistron.com/base_image/itsm:qas
  tags:
    - prd-runner02
  before_script:
    - source build-vars.sh
    - echo ${SYS_VER}
    - . ci-funcs.sh
  script:
    - issue_itsm_ticket

itsm:
  rules:
    - if: '$ENABLE_ITSM != "Y" || $ITSM_ENV != "PRD" '
      when: never
    - if: '$CI_COMMIT_BRANCH == "production" && $CI_PIPELINE_SOURCE != "schedule" && $CI_PIPELINE_SOURCE != "trigger"'
      when: always
  stage: itsm
  image: harbor.wistron.com/base_image/itsm:prd
  tags:
    - prd-runner02
  before_script:
    - source build-vars.sh
    - echo ${SYS_VER}
    - . ci-funcs.sh
  script:
    - issue_itsm_ticket

itsm-result:
  rules:
    - if: '$ENABLE_ITSM != "Y"'
      when: never
    - if: '$CI_COMMIT_BRANCH == "production" && $CI_PIPELINE_SOURCE == "trigger"'
      when: always
  stage: itsm-result
  image: harbor.wistron.com/base_image/gitlabapi:alpine
  tags:
    - prd-runner02
  before_script:
    - apk add curl
    - apk add jq
    - . ci-funcs.sh
    - source build-vars.sh
    - echo ${SYS_VER}
  script:
    - tag_itsm_status

update-sandbox:
  rules:
    - if: '$CI_COMMIT_BRANCH == "sandbox1-k8s" || $CI_COMMIT_BRANCH == "sandbox2-k8s"'
      when: always
  tags:
    - prd-runner02
  stage: update
  image: harbor.wistron.com/base_image/alpine:3.10
  before_script:
    - apk add curl
    - apk add jq
    - . ci-funcs.sh
  script:
    - update_cd_sandbox

update-dev-qas:
  rules:
    - if: '$CI_COMMIT_BRANCH == "master"'
      when: always
    - if: '$CI_COMMIT_BRANCH == "pre-production" && $CI_PIPELINE_SOURCE == "schedule"'
      when: always
    - if: '$CI_COMMIT_BRANCH == "pre-production" && $CI_PIPELINE_SOURCE == "web"'
      when: always
    - if: '$CI_COMMIT_BRANCH == "pre-production" && $DISABLE_AUTO_MTQ != "Y"'
      when: always
  tags:
    - prd-runner02
  stage: update
  image: harbor.wistron.com/base_image/vc-tool:latest
  before_script:
    - apk add curl
    - apk add jq
    - . ci-funcs.sh
    - export CI_JOB_TIMESTAMP=$(date +"%s")
    - |
      {
        source build-vars.sh;
        echo ${SYS_VER};
      } || {
        echo "No need to update.";
        exit 0;
      }
  script:
    - cd_update
    - retag
    - record_git_version

get-itsm-status:
  rules:
    - if: '$ENABLE_ITSM != "Y"'
      when: never
    - if: '$CI_COMMIT_BRANCH == "production" && $CI_PIPELINE_SOURCE == "schedule"'
      when: always
    - if: '$CI_COMMIT_BRANCH == "production" && $CI_PIPELINE_SOURCE == "web"'
      when: always
  tags:
    - prd-runner02
  stage: get-itsm-status
  image: harbor.wistron.com/base_image/alpine:3.10
  before_script:
    - apk add curl
    - apk add jq
    - . ci-funcs.sh
    - source build-vars.sh
    - echo ${SYS_VER}
  script:
    - get_itsm_status
  artifacts:
    paths:
      - build-itsm-vars.sh
    when: always
    expire_in: 1 days

update-prd:
  rules:
    - if: '$CI_COMMIT_BRANCH == "production" && $CI_PIPELINE_SOURCE == "schedule"'
      when: always
    - if: '$CI_COMMIT_BRANCH == "production" && $CI_PIPELINE_SOURCE == "web"'
      when: always
  tags:
    - prd-runner02
  stage: update
  image: harbor.wistron.com/base_image/vc-tool:latest
  before_script:
    - apk add curl
    - apk add jq
    - . ci-funcs.sh
    - check_itsm_result
    - export CI_JOB_TIMESTAMP=$(date +"%s")
    - |
      {
        source build-vars.sh;
        echo ${ITSM_APPROVED_VER};
      } || {
        echo "No need to update.";
        exit 0;
      }
  script:
    - cd_update
    - retag
    - record_git_version

clear-itsm-result:
  rules:
    - if: '$ENABLE_ITSM != "Y"'
      when: never
    - if: '$CI_COMMIT_BRANCH == "production" && $CI_PIPELINE_SOURCE == "schedule"'
      when: always
    - if: '$CI_COMMIT_BRANCH == "production" && $CI_PIPELINE_SOURCE == "web"'
      when: always
  tags:
    - prd-runner02
  stage: itsm-clear
  image: harbor.wistron.com/base_image/alpine:3.10
  before_script:
    - apk add curl
    - apk add jq
    - . ci-funcs.sh
    - check_itsm_result
  script:
    - clear_itsm_status
