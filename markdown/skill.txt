1.	使用express构建web服务器
2.	使用node.js的mysql包对MySQL数据库进行增删改查等操作
3.	使用get和bodyParser的post进行服务器与页面的数据交互
4.	使用template用数据渲染页面,分布视图
5.	使用Ajax,a标签,from表单从页面向服务器传值
6.	使用express-session对用户数据的存储
7.	通过正则表达式去校验数据的合法性
8.	使用 promise,熟练使用async与await做到异步操作

	使用的技术 : 
1.	axios + qs 完成ajax数据请求
2.	better-scroll+swiper+vue-m-message+vuerify 实现移动端触摸滑动,轮播图,交互提示以及规则验证
3.	vue-lazyload 实现图片懒加载, 通过组件异步加载进一步提升用户体验
4.	vuex-persistedstate 实现vuex的数据持久化
5.	Keep-alive 实现组件缓存 
6.	vue-cli 快速初始化代码
7.	transition 实现页面切换的交互动画

在项目中通过资源的异步加载按需加载,可以提升用户体验. 
合理的封装组件可以减少代码冗余,提高工作效率. 
在与后端接口对接中保持不确定的态度,
将接口请求域名从接口中抽离出来, 单独封装一个api文件,
请求都写在一个api对象里面,实现和后端的低耦合性. 
项目名称 : 饿了么
	硬件环境 : Windows10
	软件环境 : Vue.js
	开发工具 : VS Code

	项目功能概述:
1.	用户账号注册,登录验证
2.	首页轮播图
3.	菜品添加购物车,结算订单生成
4.	菜品评价以及订单取消
5.	需要登录的界面通过导航守卫拦截
6.	长按菜单栏

	使用的技术 : 
1.	axios + qs 完成ajax数据请求
2.	better-scroll+swiper+vue-m-message+vuerify 实现移动端触摸滑动,轮播图,交互提示以及规则验证
3.	vue-lazyload 实现图片懒加载, 通过组件异步加载进一步提升用户体验
4.	vuex-persistedstate 实现vuex的数据持久化
5.	Keep-alive 实现组件缓存 
6.	vue-cli 快速初始化代码
7.	transition 实现页面切换的交互动画

	项目心得:
在项目中通过资源的异步加载按需加载,可以提升用户体验. 合理的封装组件可以减少代码冗余,提高工作效率. 在与后端接口对接中保持不确定的态度,将接口请求域名从接口中抽离出来, 单独封装一个api文件,
请求都写在一个api对象里面,实现和后端的低耦合性. 


	自学能力强，热爱学习，平时爱好看书。容易接受并理解新知识、新事物，思维敏捷，能快速完成各项任务。 
	具备信息技术和计算机网络方面的知识素养，具有熟练的计算机操作技能，能够远程帮助客户解决问题。
	为人诚实守信，团结同学，做事勤奋、严肃认真，细心，有耐心。
